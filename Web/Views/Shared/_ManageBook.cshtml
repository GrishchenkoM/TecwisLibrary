@model dynamic
@{ Layout = null;}


<div class="modal-content">
    <div class="modal-header">
        <button class="close" data-dismiss="modal" area-hidden="true">X</button>
        <h4>Manage Book</h4>
    </div>
    <div class="modal-body">
        <dl class="dl-horizontal" id="content">

            <dt>Name of Book</dt>
            <dd><fieldset><input type="text" id="bookName" name="sql" required/></fieldset></dd>

            <dd><br /></dd>

            <dt>Year</dt>
            <dd><input type="text" id="bookYear" pattern="[0-9]{4}" maxlength="4"required/></dd>

            <dd><br/></dd>

            <dt>Author</dt>
            <dd><input type="text" id="authorNameInput" pattern="^[a-zA-ZА-Яа-яЁё\s]+$" required/></dd>
            <dd><select id="authorNameSelect"></select></dd>

            <dd><input type="text" id="bookId" style="display: none"/></dd>
            <dd><br /></dd>

            <dd><input type="submit" id="createBookBtn" value="Create Book" style="display: none" /></dd>
            <dd>
                <input type="submit" id="updateBookBtn" value="Update Book" style="display: none"/>
                &nbsp;
                <input type="submit" id="deleteBookBtn" value="Delete Book" style="display: none" />
            </dd>


            <dd><fieldset><br/><textarea id="bookResult" style="width: 300px; display: none" disabled="disabled"></textarea></fieldset></dd>

        </dl>
    </div>
</div>

<script>
    var currentBtns = []; // отображение определенных кнопок текущего модального окна

    var content = {}; // хранение контента окна

    // считывание контента
    function readContent() {
        var bookId = $('#bookId').val();
        if (bookId != '') bookId = parseInt($('#bookId').val());
        else bookId = -1;

        content.bookId = bookId;
        content.bookName = $('#bookName').val();

        var authorNameSelect = $('#authorNameSelect').val();
        var authorNameInput = $('#authorNameInput').val().replace(new RegExp('\n', 'g'), '')@*.replace(new RegExp(' ', 'g'), '')*@;
        var authorId = -1; //new author
        var authorName = authorNameInput;
        if (authorNameInput == authorNameSelect) {
            authorName = authorNameInput;
            authorId = -2; // present author
        }
        content.authorId = authorId;
        content.authorName = authorName;
        content.year = $('#bookYear').val();
    }

    // создание книги - POST
    function CreateBook() {

        readContent();

        var viewModel = {
            BookId: content.bookId,
            BookName: content.bookName,
            AuthorId: content.authorId,
            AuthorName: content.authorName,
            Year: content.year
        }

        $.ajax({
            url: '/api/content/PostBook',
            type: 'POST',
            data: viewModel,
            success: function(model) {
                window.UpdateIndexContent(model, '#modBookDialog');
            },
            error: function(data) {
                $('#bookResult').css("display", "block");
                $('#bookResult').append(data.responseText);
            }
        });
    }

    // изменение книги - PUT
    function UpdateBook() {

        readContent();

        var viewModel = {
            BookId: content.bookId,
            BookName: content.bookName,
            AuthorId: content.authorId,
            AuthorName: content.authorName,
            Year: content.year
        }

        $.ajax({
            url: '/api/content/PutBook',
            type: 'PUT',
            data: viewModel,
            success: function(model) {
                window.UpdateIndexContent(model, '#modBookDialog');
            },
            error: function(data) {
                $('#bookResult').css("display", "block");
                $('#bookResult').append(data.responseText);
            }
        });
    }

    // удаление книги - DELETE
    function DeleteBook() {

        readContent();

        $.ajax({
            url: '/api/book/' + content.bookId,
            type: 'DELETE',
            success: function(model) {
                window.UpdateIndexContent(model, '#modBookDialog');
            },
            error: function(data) {
                $('#bookResult').css("display", "block");
                $('#bookResult').append(data.responseText);
            }
        });
    }

    // button on modal view. Shows when all form elements are filled
    function displayButton() {
        var book = $('#bookName').val().replace(new RegExp('\n', 'g'), '').replace(new RegExp(' ', 'g'), '');
        var year = $('#bookYear').val().replace(new RegExp('\n', 'g'), '').replace(new RegExp(' ', 'g'), '');
        var authorNameInput = $('#authorNameInput').val().replace(new RegExp('\n', 'g'), '').replace(new RegExp(' ', 'g'), '');
        if (book !== '' && year !== '' && authorNameInput !== '') {
            for (var i = 0; i < currentBtns.length; ++i) {
                $('#bookResult').text('');
                $('#bookResult').css("display", "none");
                $(currentBtns[i]).css("display", "block");
            }
        } else {
            for (var i = 0; i < currentBtns.length; ++i) {
                $(currentBtns[i]).css("display", "none");
            }
        }
    }

    // запрос списка авторов - GET
    function getAuthors() {
        $.ajax({
            url: '/api/author',
            type: 'GET',
            dataType: 'json',
            success: function(data) {
                var sel = document.getElementById('authorNameSelect');
                var opt = null;

                for (var i = -1; i < data.length; ++i) {
                    opt = document.createElement('option');
                    if (i == -1) {
                        opt.value = '';
                        opt.id = i;
                        opt.innerHTML = '';
                    } else {
                        opt.value = data[i].Name;
                        opt.id = data[i].Id;
                        opt.innerHTML = data[i].Name;
                    }
                    sel.appendChild(opt);
                }
            },
            error: function(data) {
                $('#bookResult').css("display", "block");
                $('#bookResult').append(data.responseText);
            }
        });
    }

    // запрос списка книг - GET
    function getBook(model) {
        $.ajax({
            url: '/api/content/getbooks',
            type: 'GET',
            data: { index: model },
            dataType: 'json',
            success: function(data) {
                getAuthors();

                $('#bookId').val(data.ContentModels[0].BookId);
                $('#bookName').val(data.ContentModels[0].BookName);
                $('#bookYear').val(data.ContentModels[0].Year);
                $('#authorNameInput').val(data.ContentModels[0].AuthorName);
                $('#authorNameSelect').val(data.ContentModels[0].AuthorName);
                currentBtns = ["#updateBookBtn", "#deleteBookBtn"];
                displayButton();
            },
            error: function(data) {
                $('#bookResult').css("display", "block");
                $('#bookResult').append(data.responseText);
            }
        });
    }

    // заполнение AuthorName TextBox из выбранного в ComboBox
    function setAuthorNameTextBoxFromComboBox() {
        var select = document.getElementById("authorNameSelect");
        select.addEventListener("click",function () {
            $('#authorNameInput').val($('#authorNameSelect').val());
            displayButton();
        }, false);
    }

    // подписка на изменение AuthorName TextBox
    function changeAuthorNameTextBox() {
        var input = document.getElementById("authorNameInput");
        input.addEventListener("change", function () {
            displayButton();
        }, false);
    }

    // подписка на изменение контента модального окна
    function keyUpDisplBtnForModalViewContent() {
        $('#content').keyup(function() { displayButton(); });
    }

    // подписка кнопок
    function btnEvents() {
        $("#createBookBtn").bind("click", CreateBook);
        $("#updateBookBtn").bind("click", UpdateBook);
        $("#deleteBookBtn").bind("click", DeleteBook);
    }

    // отображение контента
    function getContent() {
        var model = @Model;
        if (model != -1) {
            getBook(model);
        } else {
            getAuthors();
            currentBtns = ["#createBookBtn"];
            $('#bookResult').css("display", "block");
            $('#bookResult').append("Create button will be enabled when all fields will be filled");
        }
    }

    $(document).ready(function() {

        keyUpDisplBtnForModalViewContent();
        displayButton();
        getContent();
        setAuthorNameTextBoxFromComboBox();
        changeAuthorNameTextBox();
        btnEvents();

    });

</script>