@model dynamic
@{ Layout = null;}

<script>
    var currentBtns = []; // отображение определенных кнопок текущего модального окна

    var content = {}; // хранение контента окна

    // считывание контента 
    function readContent() {
        var authorId = $('#authorId').val();
        if (authorId != '') authorId = parseInt($('#authorId').val());
        else authorId = -1;

        content.authorId = authorId;
        content.authorName = $('#authorName').val().replace(new RegExp('\n', 'g'), '').replace(new RegExp(' ', 'g'), '');;
    }

    // создание автора - POST
    function CreateAuthor() {
        
        readContent();
        
        var viewModel = {
            AuthorId: content.authorId,
            AuthorName: content.authorName
        }

        $.ajax({
            url: '/api/content/PostAuthor',
            type: 'POST',
            data: viewModel,
            success: function(model) {
                window.UpdateIndexContent(model, '#modAuthorDialog');
            },
            error: function(data) {
                $('#authorResult').append(data.responseText);
            }
        });
    }

    // изменение автора - PUT
    function UpdateAuthor() {

        readContent();

        var viewModel = {
            AuthorId: content.authorId,
            AuthorName: content.authorName
        }

        $.ajax({
            url: '/api/content/PutAuthor',
            type: 'PUT',
            data: viewModel,
            success: function(model) {
                window.UpdateIndexContent(model, '#modAuthorDialog');
            },
            error: function(data) {
                $('#authorResult').append(data.responseText);
            }
        });
    }

    // удаление автора - DELETE
    function DeleteAuthor() {
        
        readContent();

        $.ajax({
            url: '/api/author/' + content.authorId,
            type: 'DELETE',
            success: function(model) {
                window.UpdateIndexContent(model, '#modAuthorDialog');
            },
            error: function(data) {
                $('#authorResult').append(data.responseText);
            }
        });
    }

    // button on modal view. Shows when all form elements are filled
    function displayButton() {
        var author = $('#authorName').val().replace(new RegExp('\n', 'g'), '').replace(new RegExp(' ', 'g'), '');
        if (author !== '') {
            for (var i = 0; i < currentBtns.length; ++i) {
                $('#authorResult').text('');
                $(currentBtns[i]).css("display", "block");
            }
        } else {
            for (var i = 0; i < currentBtns.length; ++i) {
                $(currentBtns[i]).css("display", "none");
            }
        }
    }

    // запрос автора - GET
    function getAuthor(model) {
        $.ajax({
            url: '/api/content/GetAuthors',
            type: 'GET',
            data: { index: model },
            dataType: 'json',
            success: function(data) {
                $('#authorId').val(data.ContentModels[0].AuthorId);
                $('#authorName').val(data.ContentModels[0].AuthorName);
                if(data.ContentModels[0].Count > 0){
                    currentBtns = ["#updateAuthorBtn"];
                    $('#authorResult').append("Delete button will be enabled when Book's Count will be zero");
                } else {
                    currentBtns = ["#updateAuthorBtn", "#deleteAuthorBtn"];
                }
                displayButton();
            },
            error: function(data) {
                $('#authorResult').append(data.responseText);
            }
        });
    }

    // подписка на изменение AuthorName TextBox
    function changeAuthorNameTextBox() {
        var input = document.getElementById("authorName");
        input.addEventListener("change", function () {
            displayButton();
        }, false);
    }

    // подписка на изменение контента модального окна
    function keyUpDisplBtnForModalViewContent() {
        $('#content').keyup(function() { displayButton(); });
        $('#authorName').keyup(function() { displayButton(); });
    }

    // подписка кнопок
    function btnEvents() {
        $("#createAuthorBtn").bind("click", CreateAuthor);
        $("#updateAuthorBtn").bind("click", UpdateAuthor);
        $("#deleteAuthorBtn").bind("click", DeleteAuthor);
    }

    // отображение контента
    function getContent() {
        var model = @Model;
        if (model != -1) {
            getAuthor(model);
        } else {
            currentBtns = ["#createAuthorBtn"];
            $('#authorResult').append("Start writing...");
        }
    }
    
    $(document).ready(function() {

        keyUpDisplBtnForModalViewContent();
        displayButton();
        getContent();
        changeAuthorNameTextBox();
        btnEvents();

    });

</script>


<div class="modal-content">
    <div class="modal-header">
        <button class="close" data-dismiss="modal" area-hidden="true">X</button>
        <h4>Manage Author</h4>
    </div>
    <div class="modal-body">
        <dl class="dl-horizontal" id="content">

            <dt>Author Name</dt>
            <dd><fieldset><input type="text" id="authorName" name="sql" required/></fieldset></dd>

            <dd><br/></dd>

            <dd><input type="text" id="authorId" style="display: none"/></dd>
            <dd><br /></dd>

            <dd><input type="submit" id="createAuthorBtn" value="Create Author" style="display: none" /></dd>
            <dd>
                <input type="submit" id="updateAuthorBtn" value="Update Author" style="display: none"/>
                &nbsp;
                <input type="submit" id="deleteAuthorBtn" value="Delete Author" style="display: none" />
            </dd>


            <dd><fieldset><br/><div id="authorResult"></div></fieldset></dd>

        </dl>
    </div>
</div>

